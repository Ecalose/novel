<?php


namespace app\mip\controller;


use app\model\Cate;
use think\facade\View;

class Booklist extends Base
{
    protected $bookService;

    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->bookService = app('bookService');
    }

    public function index()
    {
        $cate_selector = -1;
        $map = array();
        $cate = (int)input('cate');
        $gender = (int)input('gender');
        if ($gender == 0) $gender = 1;
        if ($gender == 1) {
            $cates = cache('cates:boys');
            if (!$cates) {
                $cates = Cate::where('gender', '=', 1)->select();
                cache('cates:boys', $cates, 'null', 'redis');
            }
        } else {
            $cates = cache('cates:girls');
            if (!$cates) {
                $cates = Cate::where('gender', '=', 2)->select();
                cache('cates:girls', $cates, 'null', 'redis');
            }
        }
        $arr = array();
        if ($cate == 0 || $cate == '-1') {
            foreach ($cates as $cate) {
                array_push($arr, $cate['id']);
            }
        } else {
            array_push($arr, $cate);
            $cate_selector = $cate;
        }
        $map[] = ['cate_id', 'in', $arr];
        $gender_selector = $gender;
        $data = $this->bookService->getPagedBooks(20, $this->end_point, 'id', $map);
        unset($data['page']['query']['page']);
        $param = '';
        foreach ($data['page']['query'] as $k => $v) {
            $param .= '&' . $k . '=' . $v;
        }
        View::assign([
            'books' => $data['books'],
            'cates' => $cates,
            'cate_selector' => $cate_selector,
            'gender_selector' => $gender_selector,
            'page' => $data['page'],
            'param' => $param,
            'header' => '分类'
        ]);
        return view($this->tpl);
    }
}