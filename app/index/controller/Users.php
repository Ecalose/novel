<?php


namespace app\index\controller;


use app\model\User;
use app\service\FinanceService;
use app\service\PromotionService;
use app\service\UserService;
use think\db\exception\DataNotFoundException;
use think\db\exception\ModelNotFoundException;
use think\facade\View;

class Users extends BaseUc
{
    protected $userService;
    protected $financeService;
    protected $promotionService;

    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->userService = new UserService();
        $this->financeService = new FinanceService();
        $this->promotionService = new PromotionService();
    }

    public function ucenter()
    {
        $balance = cache('balance:' . $this->uid); //当前用户余额
        if (!$balance) {
            $balance = $this->financeService->getBalance($this->uid);
            cache('balance:' . $this->uid, $balance, '', 'pay');
        }
        try {
            $user = User::findOrFail($this->uid);
            $time = $user->vip_expire_time - time();
            $day = 0;
            if ($time > 0) {
                $day = ceil(($user->vip_expire_time - time()) / (60 * 60 * 24));
            }
            cookie('xwx_vip_expire_time', $user->vip_expire_time); //在session里更新用户vip过期时间
            View::assign([
                'balance' => $balance,
                'user' => $user,
                'day' => $day
            ]);
            return view($this->tpl);
        } catch (DataNotFoundException $e) {
            abort(404, $e->getMessage());
        } catch (ModelNotFoundException $e) {
            abort(404, $e->getMessage());
        }
    }

    public function userinfo()
    {
        $nick_name = input('nick_name');
        $email = input('email');
        try {
            $user = User::findOrFail($this->uid);
            $user->nick_name = $nick_name;
            $user->email = $email;
            $result = $user->save();
            if ($result) {
                cookie('xwx_nick_name', $nick_name);
                return json(['msg' => '修改成功', 'err' => 0]);
            } else {
                return json(['msg' => '修改失败', 'err' => 1]);
            }
        } catch (DataNotFoundException $e) {
            return json(['msg' => '用户不存在', 'err' => 1]);
        } catch (ModelNotFoundException $e) {
            return json(['msg' => '用户不存在', 'err' => 1]);
        }
    }
}